version: 2
jobs:
  build:
    docker:
      # using custom image, see .circleci/images/primary/Dockerfile
      - image: circleci/cci-demo-docker-primary:0.0.2

    steps:
      - checkout

      # This should go into custom primary image, here's only for the sake of explanation
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      # This should go into custom primary image, here's only for the sake of explanation

      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose

      - setup_remote_docker

      - run:
          name: Start container and verify it's working
          command: |
            set -x
            docker-compose -f docker/compose/production.yaml up -d --build

      - run:
          name: Wait container is ready
          command: |
            set -x
            sleep 20

      - run:
          name: Start container and verify it's working
          command: |
            set -x
            docker-compose -f docker/compose/production.yaml run api npm test

      - add_ssh_keys:
          fingerprints:
            - "a5:94:99:bb:d9:3f:72:4c:52:f1:97:4c:0f:b0:28:b8"

      - deploy:
          name: Deployment
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              ./deploy/production.sh
            fi

      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results:
          path: /tmp/test-results
